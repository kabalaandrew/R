install.packages("knitr")
install.packages('knitr', repos='http://cran.rstudio.org')
require(knitr)
states <- rownames(USArrests)
states
head(states)
head(USArrests)
kable(summary(USArrests))
pr.out <- prcomp(USArrests, scale=TRUE)
attributes(pr.out)
attributes(pr.out)
kable(pr.out$rotation)
biplot(pr.out, scale=T)
<html>
<p>You can also embed plots, for example:</p>
\documentclass{article}
\begin{document}
\SweaveOpts{concordance=TRUE}
\end{document}
install.packages('quantmod')
library(quantmod)
getSymbols(“AAPL”)
getSymbols("AAPL")
chartSeries(AAPL, subset=’last 3 months’)
chartSeries(AAPL, subset='last 3 months’)
addBBands()
library(quantmod)
getSymbols("AAPL")
chartSeries(AAPL, subset='last 3 months')
addBBands()
library(quantmod)
getSymbols("AAPL")
chartSeries(AAPL, subset='last 3 months')
addBBands()
library(quantmod)
getSymbols("ASX")
chartSeries(ASX, subset='last 3 months')
addBBands()
library(quantmod)
getSymbols("ASX")
#chartSeries(ASX, subset='last 3 months')
chartSeries(ASX['2016-11-07::2016-11-09'])
addBBands()
library(quantmod)
getSymbols("ASX")
#chartSeries(ASX, subset='last 3 months')
chartSeries(ASX['2016-11-07::'])
addBBands()
library(quantmod)
getSymbols("ASX")
#chartSeries(ASX, subset='last 3 months')
ASX['2016-11-07::']
addBBands()
library(quantmod)
getSymbols("ASX")
#chartSeries(ASX, subset='last 3 months')
barChart(ASX['2016-11-06::'])
addBBands()
library(quantmod)
getSymbols("ASX")
#chartSeries(ASX, subset='last 3 months')
barChart(ASX['2016-11-06::'])
addBBands()
library(quantmod)
getSymbols("ASX")
chartSeries(ASX, subset='last 7 days')
addBBands()
library(quantmod)
getSymbols("ASX", src='yahoo')
candleChart(ASX, subset='last 7 days')
#addBBands()
library(quantmod)
getSymbols("ASX", src='yahoo')
candleChart(ASX, subset='last 7 days')
#addBBands()
library(quantmod)
getSymbols("ASX", src='yahoo')
candleChart(ASX, multi.col=TRUE, theme='white', subset='last 7 days')
#addBBands()
library(quantmod)
getSymbols("ASX", src='yahoo')
candleChart(ASX, multi.col=TRUE, theme='white', subset='last 24 hours')
#addBBands()
library(quantmod)
getSymbols("ASX", src='yahoo')
candleChart(ASX, multi.col=TRUE, theme='white', subset='last 1 day')
#addBBands()
library(quantmod)
getSymbols("ASX", src='yahoo')
candleChart(ASX, multi.col=TRUE, theme='white', subset='last 10 days')
#addBBands()
library(quantmod)
getSymbols("ASX", src='yahoo')
chartSeries(ASX, multi.col=TRUE, theme='white', subset='last 10 days')
#addBBands()
library(quantmod)
getSymbols("ASX", src='yahoo')
chartSeries(ASX, multi.col=TRUE, theme='white', subset='last 10 days')
#addBBands()
addDema()
library(quantmod)
getSymbols("ASX", src='yahoo')
chartSeries(ASX, multi.col=TRUE, theme='white', subset='last 10 days')
#addBBands()
addDEMA(n = 10, on = 1, with.col = Cl, overlay = TRUE, col = "pink")
library(quantmod)
#getSymbols("ASX", src='yahoo')
#chartSeries(ASX, multi.col=TRUE, theme='white', subset='last 10 days')
#addBBands()
##############################################################################
# Load Systematic Investor Toolbox (SIT)
# http://systematicinvestor.wordpress.com/systematic-investor-toolbox/
###############################################################################
setInternet2(TRUE)
con = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))
source(con)
close(con)
#*****************************************************************
# Load Intraday data
#******************************************************************
data = getSymbol.intraday.google('ASX', 'NASDAQ', 60, '5d')
last(data, 10)
plota(data, type='candle', main='Google Intraday prices')
package.install('twitteR')
install.packages("twitteR")
install.packages("ROAuth")
install.packages("RCurl")
install.packages("stringr")
install.packages("tm")
install.packages("ggmap")
data <-c(89,92,71,72,73,101,102,94,89,79,86,92,91,96,87,92,78,102,85,67,64,63,79,13,86,90,80)
hist(data)
hist(data, bins=10)
hist(data, breaks=10)
hist(data, breaks=5)
housing <- read.csv(land.csv)
housing <- read.csv("land.csv")
setwd("~/R")
housing <- read.csv("land.csv")
head(land)
head(housing)
housing$Year <- as.numeric(substr(housing$Date,1,4))
housing$Qtr <- as.numeric(substr(housing$Date,5,5))
housing$Date <- housing$Year + Housing$Qtr/4
housing$Year <- as.numeric(substr(housing$Date,1,4))
housing$Qtr <- as.numeric(substr(housing$Date,5,5))
housing$Date <- housing$Year + housing$Qtr/4
View(housing)
library(ggplot2)
ggplot(housing, aes(x=Home.Value) + geom_histogram())
ggplot(housing, aes(x=Home.Value)) + geom_histogram()
housing$Home.Value <- gsub('\\$', '', housing$Home.Value))
housing$Home.Value <- gsub('\\$', '', housing$Home.Value)
housing$Structure.Cost <- gsub('\\$', '', housing$Structure.Cost)
housing$Home.Value <- gsub(',', '', housing$Home.Value)
housing$Structure.Cost <- gsub(',', '', housing$Structure.Cost)
housing$Land.Value <- gsub('\\$', '', housing$Land.Value)
housing$Land.Value <- gsub(',', '', housing$Land.Value)
housing <- read.csv("land.csv")
head(land)
#Data cleaning
housing$Year <- as.numeric(substr(housing$Date,1,4))
housing$Qtr <- as.numeric(substr(housing$Date,5,5))
housing$Date <- housing$Year + housing$Qtr/4
# removing commas and $ sings
housing$Home.Value <- as.numeric(gsub('\\$', '', housing$Home.Value))
housing$Home.Value <- as.numeric(gsub(',', '', housing$Home.Value))
housing$Structure.Cost <- as.numeric(gsub('\\$', '', housing$Structure.Cost))
housing$Structure.Cost <- as.numeric(gsub(',', '', housing$Structure.Cost))
housing$Land.Value <- as.numeric(gsub('\\$', '', housing$Land.Value))
housing$Land.Value <- as.numeric(gsub(',', '', housing$Land.Value))
housing <- read.csv("land.csv")
head(land)
#Data cleaning
housing$Year <- as.numeric(substr(housing$Date,1,4))
housing$Qtr <- as.numeric(substr(housing$Date,5,5))
housing$Date <- housing$Year + housing$Qtr/4
# removing commas and $ sings
housing$Home.Value <- gsub('\\$', '', housing$Home.Value)
housing$Home.Value <- gsub(',', '', housing$Home.Value)
housing$Structure.Cost <- gsub('\\$', '', housing$Structure.Cost)
housing$Structure.Cost <- gsub(',', '', housing$Structure.Cost)
housing$Land.Value <- gsub('\\$', '', housing$Land.Value)
housing$Land.Value <- gsub(',', '', housing$Land.Value)
summary(housing)
Housing$Home.Value <- as.numeric(Housing$Home.Value)
housing$Home.Value <- as.numeric(housing$Home.Value)
housing$Structure.Cost <- as.numeric(housing$Structure.Cost)
housing$Land.Value <- as.numeric(housing$Land.Value)
ggplot(housing, aes(x=Home.Value)) + geom_histogram()
ggplot(subset(housing, STATE %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
ggplot(subset(housing, STATE %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=STATE))+
geom_point()
ggplot(subset(housing, STATE %in% c("MA", "TX")),
aes(x=Date,y=Home.Value,color=STATE)) + geom_point()
ggplot(subset(housing, STATE %in% c("MA", "TX")),aes(x=Date,y=Home.Value,color=STATE)) + geom_point()
ggplot(subset(housing, housing$STATE %in% c("MA", "TX")),aes(x=Date,y=Home.Value,color=STATE)) + geom_point()
library(ggplot2)
ggplot(housing, aes(x=Home.Value)) + geom_histogram(fill="red")
library(ggplot2)
ggplot(housing, aes(x=Home.Value)) + geom_histogram(fill="blue")
library(ggplot2)
ggplot(housing, aes(x=Home.Value)) + geom_histogram(fill="density")
ggplot(housing, aes(x=Home.Value)) + geom_histogram(fill="grey")
View(aa.arithmetic.geometric.test)
View(aa.test.create.ia.country)
View(write.xts)
View(your.own.factor.rolling.regression)
ggplot(housing, aes(x=Home.Value)) + geom_histogram(fill="cyan")
data <- read.csv("currency.csv")
head(data)
p <- ggplot(data, aes(x=End.Date, y=USD.UGX))
p + geom_line()
qplot(End.Date, USD.UGX, data=currency, geom="line")
qplot(End.Date, USD.UGX, data='data', geom="line")
qplot(End.Date, USD.UGX, data=data, geom="line")
summary(data)
data$End.Date <- as.Date('1/10/14')
head(data)
data$End.Date <- as.Date('10/1/14', '%d/%m/%y')
head(data)
tail(data)
